apiVersion: v1
kind: Service
metadata:
  name: proxy
  labels:
    service: proxy
    chart: {{ template "smartcheck.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ default "LoadBalancer" .Values.service.type }}
  ports:
    - port: {{ default 443 .Values.service.httpsPort }}
      targetPort: 8443
      protocol: TCP
      name: https
    - port: {{ default 80 .Values.service.httpPort }}
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    service: proxy
    release: {{ .Release.Name }}

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: proxy
  labels:
    service: proxy
    chart: {{ template "smartcheck.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ default 1 .Values.replicas.proxy }}
  template:
    metadata:
      labels:
        service: proxy
        chart: {{ template "smartcheck.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
{{- $securityContextEnabled := .Values.securityContext.enabled }}
{{- $securityContext := default .Values.securityContext.default .Values.securityContext.proxy }}
{{- $podSecurityContext := default .Values.securityContext.default.pod $securityContext.pod }}
{{- $containerSecurityContext := default .Values.securityContext.default.container $securityContext.container }}
{{- if $securityContextEnabled }}
      securityContext:
{{ toYaml $podSecurityContext | indent 8 }}
{{- end }}
      {{- $imageDefaults := .Values.images.defaults }}
      {{- with .Values.images.proxy }}
      {{- $secret := (default $imageDefaults.imagePullSecret .imagePullSecret) | quote }}
      {{- if not (eq "" $secret) }}
      imagePullSecrets:
        - name: {{ $secret }}
      {{- end }}
      containers:
        - name: proxy
{{- if $securityContextEnabled }}
          securityContext:
{{ toYaml $containerSecurityContext | indent 12 }}
{{- end }}
          {{- $project := (default (default "deepsecurity" $imageDefaults.project) .project) }}
          {{- $repository := printf "%s/%s" $project (required ".repository is required!" .repository) }}
          {{- $tag := (default $imageDefaults.tag .tag) }}

          {{- if eq (default "" .registry) "-" }}
          image: {{ printf "%s:%s" $repository $tag | quote }}
          {{- else if eq (default "-" $imageDefaults.registry) "-" }}
          image: {{ printf "%s:%s" $repository $tag | quote }}
          {{- else }}
          image: {{ printf "%s/%s:%s" (default $imageDefaults.registry .registry) $repository $tag | quote }}
          {{- end }}
          imagePullPolicy: {{ default (default "Always" $imageDefaults.pullPolicy) .pullPolicy }}
          {{- end }}
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8443
              name: https
          volumeMounts:
            - mountPath: /secrets/
              name: tls-secret
          # TODO probes
          # livenessProbe:
          # readinessProbe:
          args: []
          env: []
          resources:
{{ toYaml (default .Values.resources.defaults .Values.resources.proxy) | indent 12 }}
      volumes:
        - name: tls-secret
          secret:
{{- if not .Values.certificate.secret.name }}
            secretName: {{ template "smartcheck.fullname" . }}-tls-certificate
            items:
              - key: certificate
                path: default_ssl.crt
              - key: privateKey
                path: default_ssl.key
{{- else }}
            secretName: {{ .Values.certificate.secret.name }}
            items:
              - key: {{ required "certificate.secret.certificate is required when certificate.secret.name is set" .Values.certificate.secret.certificate }}
                path: default_ssl.crt
              - key: {{ required "certificate.secret.privateKey is required when certificate.secret.name is set" .Values.certificate.secret.privateKey }}
                path: default_ssl.key
{{- end }}
      nodeSelector:
{{ toYaml (default .Values.nodeSelector.defaults .Values.nodeSelector.proxy) | indent 8 }}
      tolerations:
{{ toYaml (default .Values.tolerations.defaults .Values.tolerations.proxy) | indent 8 }}
      restartPolicy: Always

{{ if .Values.networkPolicy.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: proxy
  labels:
    service: proxy
    chart: {{ template "smartcheck.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  podSelector:
    matchLabels:
      service: proxy
      chart: {{ template "smartcheck.chart" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from: # any
      ports:
        - protocol: TCP
          port: 8080
    - from: # any
      ports:
        - protocol: TCP
          port: 8443
  egress:
    - to:
        - podSelector:
            matchLabels:
              service: frontend
              chart: {{ template "smartcheck.chart" . }}
              release: {{ .Release.Name }}
              heritage: {{ .Release.Service }}
        - podSelector:
            matchLabels:
              service: scan
              chart: {{ template "smartcheck.chart" . }}
              release: {{ .Release.Name }}
              heritage: {{ .Release.Service }}
        - podSelector:
            matchLabels:
              service: registryviews
              chart: {{ template "smartcheck.chart" . }}
              release: {{ .Release.Name }}
              heritage: {{ .Release.Service }}
        - podSelector:
            matchLabels:
              service: auth
              chart: {{ template "smartcheck.chart" . }}
              release: {{ .Release.Name }}
              heritage: {{ .Release.Service }}
        - podSelector:
            matchLabels:
              service: docs
              chart: {{ template "smartcheck.chart" . }}
              release: {{ .Release.Name }}
              heritage: {{ .Release.Service }}
      ports:
        - protocol: TCP
          port: 8080
    - to: # any
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53
{{- end }}
